name: release

on:
  push:
    tags:
      - v*.*.*
    branches-ignore:
      - '**'

jobs:
  build-base-image:
    name: Build Base Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "APP_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
      - run: echo "APP_REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        id: buildx
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: traptitech
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          target: ns
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
            APP_REVISION=${{ env.APP_REVISION }}
          tags: |
            ghcr.io/traptitech/ns:latest
            ghcr.io/traptitech/ns:${{ env.APP_VERSION }}
          cache-from: type=registry,ref=ghcr.io/traptitech/ns:buildcache
          cache-to: type=registry,ref=ghcr.io/traptitech/ns:buildcache-release,mode=max

  build-component-images:
    name: Build Component Images
    runs-on: ubuntu-latest
    needs:
      - build-base-image
    strategy:
      matrix:
        component:
          - ns-builder
          - ns-controller
          - ns-gateway
          - ns-gitea-integration
          - ns-migrate
          - ns-ssgen
    steps:
      - uses: actions/checkout@v4
      - run: echo "APP_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
      - run: echo "APP_REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        id: buildx
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: traptitech
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          target: ${{ matrix.component }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
            APP_REVISION=${{ env.APP_REVISION }}
          tags: |
            ghcr.io/traptitech/${{ matrix.component }}:latest
            ghcr.io/traptitech/${{ matrix.component }}:${{ env.APP_VERSION }}
          cache-from: type=registry,ref=ghcr.io/traptitech/ns:buildcache-release

  build-dashboard-image:
    name: Build Dashboard Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set APP_VERSION env
        run: echo "APP_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: traptitech
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: dashboard
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/traptitech/ns-dashboard:latest
            ghcr.io/traptitech/ns-dashboard:${{ env.APP_VERSION }}
          cache-from: type=registry,ref=ghcr.io/traptitech/ns-dashboard:buildcache

  build-sablier-image:
    name: Build Sablier Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set APP_VERSION env
        run: echo "APP_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: traptitech
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: sablier
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/traptitech/ns-sablier:latest
            ghcr.io/traptitech/ns-sablier:${{ env.APP_VERSION }}
          cache-from: type=registry,ref=ghcr.io/traptitech/ns-sablier:buildcache

  dispatch-renovate:
    name: Dispatch Renovate
    runs-on: ubuntu-latest
    needs:
      - build-component-images
      - build-dashboard-image
      - build-sablier-image
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DISPATCH_PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'traPtitech',
              repo: 'manifest',
              workflow_id: 'renovate.yaml',
              ref: 'main'
            })

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
