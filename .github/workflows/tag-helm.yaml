name: Create new tag (helm)
run-name: Create new helm tag (${{ inputs.strategy }})

on:
  workflow_dispatch:
    inputs:
      strategy:
        description: Semver release strategy
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major

  workflow_call:
    inputs:
      strategy:
        description: Semver release strategy
        type: string
        required: true

env:
  CHART: neoshowcase

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Update helm Chart.yaml
        run: |
          cd charts
          ./bump.sh ${{ env.CHART }} ${{ github.event.inputs.strategy }}
          cd ..

      - id: calc-tag
        name: Calculate tag
        run: |
          VERSION=$(grep '^version:' ./charts/${{ env.CHART }}/Chart.yaml | cut -d ' ' -f 2 | tr -d '"')
          NEW_TAG="helm/v${VERSION}"
          echo "New tag: $NEW_TAG"
          echo "new-raw=${VERSION}" >> $GITHUB_OUTPUT
          echo "new-tag=${NEW_TAG}" >> $GITHUB_OUTPUT

      - name: Commit and push helm changes
        run: |
          git add charts/${{ env.CHART }}/Chart.yaml
          git commit -m "Update charts/${{ env.CHART }} to ${{ steps.calc-tag.outputs.new-raw }}"
          git push

      - name: Create and push tag
        run: |
          NEW_TAG=${{ steps.calc-tag.outputs.new-tag }}
          GIT_COMMIT=$(git rev-parse HEAD)
          echo "Tagging commit $GIT_COMMIT with $NEW_TAG"
          git tag "$NEW_TAG"

          echo "Pushing tag $NEW_TAG"
          git push origin "$NEW_TAG"

    outputs:
      new-tag: ${{ steps.calc-tag.outputs.new-tag }}

  # NOTE: Push by GitHub Actions (using default $GITHUB_TOKEN) will NOT trigger another workflow with "on: push" to prevent an infinite loop.
  # So we need to explicitly call the release workflow here.
  release:
    needs: [ tag ]
    uses: ./.github/workflows/release-helm.yaml
