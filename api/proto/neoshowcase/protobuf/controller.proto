syntax = "proto3";
package neoshowcase.protobuf;

import "google/protobuf/empty.proto";
import "neoshowcase/protobuf/gateway.proto";

message ImageConfig {
  message RegistryConfig {
    string scheme = 1;
    string addr = 2;
    string username = 3;
    string password = 4;
  }
  RegistryConfig registry = 1;
  string name_prefix = 2;
  string tmp_name_prefix = 3;
}

message BuilderSystemInfo {
  bytes private_key = 1;
  ImageConfig image_config = 2;
}

message BuildLogPortion {
  string build_id = 1;
  bytes log = 2;
}

message SaveArtifactRequest {
  Artifact artifact = 1;
  bytes body = 2; // TODO: stream contents?
}

message SaveBuildLogRequest {
  string build_id = 1;
  bytes log = 2;
}

message SaveRuntimeImageRequest {
  string build_id = 1;
  int64 size = 2;
}

message RepositoryPrivate {
  Repository repo = 1;
  string username = 2;
  string password = 3;
  string ssh_key = 4;
}

message StartBuildRequest {
  RepositoryPrivate repo = 1;
  Application app = 2;
  ApplicationEnvVars app_envs = 3;
  Build build = 4;
}

message BuilderRequest {
  enum Type {
    START_BUILD = 0;
    CANCEL_BUILD = 1;
  }
  Type type = 1;
  oneof body {
    StartBuildRequest start_build = 2;
    BuildIdRequest cancel_build = 3;
  }
}

message ConnectedBody {
  // Larger value means higher priority
  int64 priority = 1;
}

message BuildSettled {
  string build_id = 1;
  BuildStatus status = 2;
}

message BuilderResponse {
  enum Type {
    CONNECTED = 0;
    BUILD_SETTLED = 1;
  }
  Type type = 1;
  oneof body {
    ConnectedBody connected = 2;
    BuildSettled settled = 3;
  }
}

message CopyFileTreeRequest {
  string destination = 1;
  bytes tar_content = 2; // TODO: stream contents?
}

message HelperExecEnv {
  string key = 1;
  string value = 2;
}

message HelperExecRequest {
  string work_dir = 1;
  repeated string cmd = 2;
  repeated HelperExecEnv envs = 3;
}

message HelperExecResponse {
  enum Type {
    LOG = 0;
    EXIT_CODE = 1;
  }
  Type type = 1;
  oneof body {
    bytes log = 2;
    int32 exit_code = 3;
  }
}

message SSGenRequest {
  enum Type {
    RELOAD = 0;
  }
  Type type = 1;
}

message GiteaIntegrationRequest {
  enum Type {
    RESYNC = 0;
  }
  Type type = 1;
}

service ControllerService {
  rpc GetSystemInfo(google.protobuf.Empty) returns (SystemInfo);

  rpc FetchRepository(RepositoryIdRequest) returns (google.protobuf.Empty);
  rpc RegisterBuild(ApplicationIdRequest) returns (google.protobuf.Empty);
  rpc SyncDeployments(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc StreamBuildLog(BuildIdRequest) returns (stream BuildLog);
  rpc CancelBuild(BuildIdRequest) returns (google.protobuf.Empty);
}

service ControllerBuilderService {
  rpc GetBuilderSystemInfo(google.protobuf.Empty) returns (BuilderSystemInfo);
  rpc PingBuild(BuildIdRequest) returns (google.protobuf.Empty);
  rpc StreamBuildLog(stream BuildLogPortion) returns (google.protobuf.Empty);
  rpc SaveArtifact(SaveArtifactRequest) returns (google.protobuf.Empty);
  rpc SaveBuildLog(SaveBuildLogRequest) returns (google.protobuf.Empty);
  rpc SaveRuntimeImage(SaveRuntimeImageRequest) returns (google.protobuf.Empty);
  rpc ConnectBuilder(stream BuilderResponse) returns (stream BuilderRequest);
}

service BuildpackHelperService {
  rpc CopyFileTree(CopyFileTreeRequest) returns (google.protobuf.Empty);
  rpc Exec(HelperExecRequest) returns (stream HelperExecResponse);
}

service ControllerSSGenService {
  rpc ConnectSSGen(google.protobuf.Empty) returns (stream SSGenRequest);
}

service ControllerGiteaIntegrationService {
  rpc Connect(google.protobuf.Empty) returns (stream GiteaIntegrationRequest);
}
